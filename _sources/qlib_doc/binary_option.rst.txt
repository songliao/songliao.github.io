======================================
二元期权
======================================

:ref:`二元期权<binary option>` 又可分为 **gap option** , **cash or nothing option** 以及 **asset or nothing option** 。 

gap option
----------------
跳跃二元期权是一种欧式看跌或看涨期权，该期权的执行价为Strike，障碍价为Barrier。障碍价格决定了期权的支付是否非零，执行价格决定了实际支付的金额。

.. function:: Pv(double spot, double r, double b, double volatility, double ttm, OptionType o_type, double strike, double barrier);

.. container:: custom

    **Parameters:**
        **spot: double**
            | 标的价格。
        **r: double**
            | 无风险利率。 
        **b: double**
            | 持仓成本。
        **volatility: double**
            | 波动率。
        **ttm: double**
            | 到期时间。 
        **type: OptionType**
            | 期权类型, **CALL** 或 **PUT**。
        **strike: double**
            | 行权价格。
        **barrier: double**
            | 障碍价格。

    **Returns: double**
            | 返回跳跃二元期权的现值。

Example
^^^^^^^^^^^^^^^^^^

.. code-block:: c++

    #include <gtest/gtest.h>
    #include "qlib/analytical_engine/binary_option.h"   

    TEST(TestAnalytical, GapOption)
    {
        // page 174
        double spot = 50.0;
        double strike = 57.0;
        double barrier = 50.0;
        double r = 0.09;
        double b = r;
        double vol = 0.2;
        double ttm = 0.5;

        double pv = BO::GapOption::Pv(spot, r, b, vol, ttm, OptionType::CALL, strike, barrier);

        EXPECT_NEAR(-0.0053, pv, 1e-4);
    }

.. _cash or nothing ref:

cash or nothing option
------------------------------
现金二元期权是一种到期要么获得现金回报要么一文不值的期权。

.. function:: Pv(double spot, double r, double b, double volatility, double ttm, OptionType o_type, double strike, double cash);

.. container:: custom

    **Parameters:**
        **spot: double**
            | 标的价格。
        **r: double**
            | 无风险利率。 
        **b: double**
            | 持仓成本。
        **volatility: double**
            | 波动率。
        **ttm: double**
            | 到期时间。 
        **type: OptionType**
            | 期权类型, **CALL** 或 **PUT**。
        **strike: double**
            | 行权价格。
        **cash: double**
            | 现金。

    **Returns: double**
            | 返回现金二元期权的现值。

Example
^^^^^^^^^^^^^^^

.. code-block:: c++

    #include <gtest/gtest.h>
    #include "qlib/analytical_engine/binary_option.h"   
    
    TEST(TestAnalytical, CashOrNothing)
    {
        double spot = 100;
        double strike = 80;
        double cash = 10;
        double ttm = 0.75;
        double r = 0.06;
        double b = 0.00;
        double vol = 0.35;

        double pv = BO::CashOrNothing::Pv(spot, r, b, vol ,ttm, OptionType::PUT, strike, cash);

        EXPECT_NEAR(2.6710, pv, 1e-4);
    }

.. _asset or nothing ref:

asset or nothing option
------------------------------
资产二元期权是一种到期要么支付相当于一单位标的资产的价值要么就是一文不值的期权。

.. function:: Pv(double spot, double r, double b, double volatility, double ttm， OptionType o_type, double strike);
.. container:: custom

    **Parameters:**
        **spot: double**
            | 标的价格。
        **r: double**
            | 无风险利率。 
        **b: double**
            | 持仓成本。
        **volatility: double**
            | 波动率。
        **ttm: double**
            | 到期时间。 
        **type: OptionType**
            | 期权类型, **CALL** 或 **PUT**。
        **strike: double**
            | 行权价格。

    **Returns: double**
            | 返回资产二元期权的现值。

Example
^^^^^^^^^^^^^^^^^^

.. code-block:: c++

    #include <gtest/gtest.h>
    #include "qlib/analytical_engine/binary_option.h"   
    
    TEST(TestAnalytical, AssetOrNothing)
    {
        double spot = 70;
        double strike = 65;
        double ttm = 0.5;
        double r = 0.07;
        double b = 0.02;
        double vol = 0.27;

        double pv = BO::AssetOrNothing::Pv(spot, r, b, vol, ttm, OptionType::PUT, strike);

        EXPECT_NEAR(20.2069, pv, 1e-4);
    }
