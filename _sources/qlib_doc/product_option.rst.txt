===========================
积期权
===========================
积期权衡量两个资产价格的乘积作为标的价格的一种衍生品。

.. list-table::

  * - 期权名称
    - 收益描述
  * - 积期权
    - | 看涨 :math:`\text{Max}(S_1 \times S_2 - X, 0)`
      | 看跌 :math:`\text{Max}(X - S_1 \times S_2, 0)`

.. function:: Pv(double spot1, double spot2, double rho, double r, double b1, double b2, double vol1, double vol2, double ttm, OptionType type, double strike);

.. container:: custom

    **Parameters:**
        **spot1: double**
            | 资产1的价格。
        **spot2: double**
            | 资产2的价格。
        **rho: double**
            | 两个挂钩标的之间的相关性。 
        **r: double**
            | 无风险利率。
        **b1: double**
            | 资产1的持仓成本。
        **b2: double**
            | 资产2的持仓成本。
        **vol1: double**
            | 资产1的波动率。
        **vol2: double**
            | 资产2的波动率。
        **ttm: double**
            | 到期时间。 
        **type: OptionType**
            | 期权类型, **CALL** 或 **PUT**。
        **strike: double**
            | 行权价格。

    **Returns: double**
            | 返回积期权的现值。

Example
^^^^^^^^^^^^^^^^^^

.. code-block:: c++

    #include <gtest/gtest.h>
    #include <iostream>

    #include "qlib/analytical_engine/product_option.h"

    TEST(TestAnalytical, ProductOption)
    {
        // page 174
        double spot1 = 100;
        double spot2 = 105;
        double rho = -0.5;
        double r = 0.07;
        double b1 = 0.02;
        double b2 = 0.05;
        double vol1 = 0.2;
        double vol2 = 0.3;
        double t = 0.1;
        OptionType type = OptionType::CALL;
        double strike = 15000;

        double pv =  AnalyticalEngine::Product::Pv(spot1, spot2, rho, r, b1, b2, vol1, vol2, t, type, strike);

        EXPECT_NEAR(0.0028, pv, 1e-4);
    }
